- name: "Install Mac App Store CLI"
  community.general.homebrew:
    name: mas
    state: present

- name: "Install 1Password Safari extension"
  community.general.mas:
    id: 1569813296
    state: present

- name: "Install Twitter"
  community.general.mas:
    id: 1482454543
    state: present

- name: "Install Home Assistant client"
  community.general.mas:
    id: 1099568401
    state: present

- name: "Install 1Password"
  community.general.homebrew_cask:
    name: 1password
    state: present

- name: "Install 1Password CLI"
  community.general.homebrew_cask:
    name: 1password-cli
    state: present

- name: "Install Karabiner Elements"
  community.general.homebrew_cask:
    name: karabiner-elements
    state: present
  register: install_karabiner

- name: "Install iTerm2"
  community.general.homebrew_cask:
    name: iterm2
    state: present

- name: "Install Rectangle"
  community.general.homebrew_cask:
    name: rectangle
    state: present
  register: install_rectangle

- name: "Install Discord"
  community.general.homebrew_cask:
    name: discord
    state: present

- name: "Install Sublime Text"
  community.general.homebrew_cask:
    name: sublime-text
    state: present

- name: "Install Alfred"
  community.general.homebrew_cask:
    name: alfred
    state: present
  register: install_alfred

- name: "Install Evernote"
  community.general.homebrew_cask:
    name: evernote
    state: present

- name: "Install Spotify"
  community.general.homebrew_cask:
    name: spotify
    state: present

- name: "Install Chrome"
  community.general.homebrew_cask:
    name: google-chrome
    state: present
  ignore_errors: true

- name: "Install Slack"
  community.general.homebrew_cask:
    name: slack
    state: present
  ignore_errors: true

- name: "Install telnet"
  community.general.homebrew:
    name: telnet
    state: present

- name: "Install Golang"
  community.general.homebrew:
    name: golang
    state: present

- name: "Install jq"
  community.general.homebrew:
    name: jq
    state: present

- name: "Install kubernetes-cli"
  community.general.homebrew:
    name: kubernetes-cli
    state: present

- name: "Install helm"
  community.general.homebrew:
    name: helm
    state: present

- name: "Install istioctl"
  community.general.homebrew:
    name: istioctl
    state: present

- name: "Install fzf"
  community.general.homebrew:
    name: fzf
    state: present

- name: "Install fzf"
  community.general.homebrew:
    name: fzf
    state: present

- name: "Install zsh-syntax-highlighting"
  community.general.homebrew:
    name: zsh-syntax-highlighting
    state: present

- name: "Install k9s"
  community.general.homebrew:
    name: k9s
    state: present

- name: "Install kubectx"
  community.general.homebrew:
    name: kubectx
    state: present

- name: "Install cloudflared"
  community.general.homebrew:
    name: cloudflared
    state: present

# Corporate device-specific software

- name: "Private Homebrew tap name"
  ansible.builtin.set_fact:
    private_tap_name: "{{ lookup('ansible.builtin.env', 'PRIVATE_BREW_TAP_NAME') }}"
  when: corporate_machine

- name: "Private Homebrew tap URL"
  ansible.builtin.set_fact:
    private_tap_url: "{{ lookup('ansible.builtin.env', 'PRIVATE_BREW_TAP_URL') }}"
  when: corporate_machine

- name: "Tap private Homebrew repository"
  homebrew_tap:
    name: "{{ private_tap_name }}"
    url: "{{ private_tap_url }}"
  when: corporate_machine

- name: "Install Auth CLI"
  community.general.homebrew:
    name: authcli
    state: present
  when: corporate_machine

- name: "Install Google Drive"
  community.general.homebrew_cask:
    name: google-drive
    state: present
  register: install_gdrive
  when: corporate_machine

- name: "Install Google Earth Pro"
  community.general.homebrew_cask:
    name: google-earth-pro
    state: present
  when: corporate_machine

- name: "Install Google Cloud SDK"
  community.general.homebrew_cask:
    name: google-cloud-sdk
    state: present
  when: corporate_machine

# Personal device-specific software

- name: "Install Adobe Creative Cloud"
  community.general.homebrew_cask:
    name: adobe-creative-cloud
    state: present
  when: personal_machine

- name: "Install Backblaze"
  community.general.homebrew_cask:
    name: backblaze
    state: present
  when: personal_machine

- name: "Install DaisyDisk"
  community.general.homebrew_cask:
    name: daisydisk
    state: present
  when: personal_machine

- name: "Install Dropbox"
  community.general.homebrew_cask:
    name: dropbox
    state: present
  when: personal_machine

- name: "Install Little Snitch"
  community.general.homebrew_cask:
    name: little-snitch
    state: present
  when: personal_machine

- name: "Install Messenger"
  community.general.mas:
    id: 1480068668
    state: present
  when: personal_machine

- name: "Install Microsoft Remote Desktop"
  community.general.mas:
    id: 1295203466
    state: present
  when: personal_machine

- name: "Install Tailscale"
  community.general.homebrew_cask:
    name: tailscale
    state: present
  when: personal_machine

- name: "Install Visual Studio Code"
  community.general.homebrew_cask:
    name: visual-studio-code
    state: present
  when: personal_machine

- name: "Install Zoom"
  community.general.homebrew_cask:
    name: zoom
    state: present
  when: personal_machine

- name: Tap a Homebrew repository, state present
  community.general.homebrew_tap:
    name: "homebrew/homebrew-cask-drivers"
  when: personal_machine

- name: "Install Sonos controller"
  community.general.homebrew_cask:
    name: sonos
    state: present
  when: personal_machine

- name: "Install Synology Drive"
  community.general.homebrew_cask:
    name: synology-drive
    state: present
  when: personal_machine

- name: "Install Balena Etcher"
  community.general.homebrew_cask:
    name: balenaetcher
    state: present
  when: personal_machine

- name: "Install Docker"
  community.general.homebrew_cask:
    name: docker
    state: present
  when: personal_machine

- name: Tap touch2sudo repo
  community.general.homebrew_tap:
    name: "prbinu/touch2sudo"
  when: personal_machine

- name: "Install kubectx"
  community.general.homebrew:
    name: touch2sudo
    state: present
  when: personal_machine

# Install font for iTerm

- name: Ensure user font directory exists
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/Library/Fonts"
    state: directory
    mode: '0755'

- name: Check if Meslo font is installed
  stat:
    path: "{{ lookup('env', 'HOME') }}/Library/Fonts/SourceCodePro for Powerline.ttf"
  register: meslo_font_path

- name: Download SourceCodePro font
  ansible.builtin.get_url:
    url: "https://github.com/Falkor/dotfiles/raw/master/fonts/SourceCodePro%2BPowerline%2BAwesome%2BRegular.ttf"
    dest: "{{ lookup('env', 'HOME') }}/Library/Fonts/SourceCodePro for Powerline.ttf"
    checksum: sha256:44f51e4e61b171f070ad792ee61fb11c72e682be91d381b94ad9f314e4a5ba20


## TODO: Little Snitch ruleset, VMWare Fusion
